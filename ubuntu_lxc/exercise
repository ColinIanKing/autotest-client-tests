#!/bin/sh
# Environment
set -eu

unset TMPDIR

TEST_PASS=0
TEST_FAIL=0
TEST_IGNORED=0

IGNORE_LIST=""

# FIXME: This should be done in default adt environment
# Detect the ubuntu-ci setup
if echo "" | nc -w 2 squid.internal 3128 >/dev/null 2>&1; then
    echo "Running in the Canonical CI environment"
    export http_proxy="http://squid.internal:3128"
    export https_proxy="http://squid.internal:3128"
elif echo "" | nc -w 2 10.245.64.1 3128 >/dev/null 2>&1; then
    echo "Running in the Canonical enablement environment"
    export http_proxy="http://10.245.64.1:3128"
    export https_proxy="http://10.245.64.1:3128"
fi

# Helper functions
pass() {
    TEST_PASS=$((${TEST_PASS}+1))
    echo "PASS: $1"
}

fail() {
    for entry in $IGNORE_LIST; do
        if [ "$entry" = "$2" ]; then
            ignore $1
            return
        fi
    done

    TEST_FAIL=$((${TEST_FAIL}+1))
    echo "FAIL: $1"

    if [ -f "$3" ]; then
        echo "---"
        cat $3
        echo "---"
    fi
}

ignore() {
    TEST_IGNORED=$((${TEST_IGNORED}+1))
    echo "IGNORED: $*"
}

summary() {
    echo ""
    echo "SUMMARY: pass=$TEST_PASS, fail=$TEST_FAIL, ignored=$TEST_IGNORED"
}

# The actual tests
## Default testsuite
for testbin in /usr/bin/lxc-test-*; do
    STRING="lxc-tests: $testbin"
    [ ! -x "$testbin" ] && continue

    # Some tests can't be run standalone
    [ "$testbin" = "/usr/bin/lxc-test-may-control" ] && continue

    # Skip some tests when running in a container
    if [ -f /run/container_type ]; then
        [ "$testbin" = "/usr/bin/lxc-test-apparmor" ] && \
            ignore "$STRING" && continue

        [ "$testbin" = "/usr/bin/lxc-test-device-add-remove" ] && \
            ignore "$STRING" && continue

        [ "$testbin" = "/usr/bin/lxc-test-reboot" ] && \
            ignore "$STRING" && continue
    fi

    # Skip userns tests in unprivileged containers
    if [ -f /proc/self/uid_map ] && \
            ! grep -q "4294967295$" /proc/self/uid_map; then

        [ "$testbin" = "/usr/bin/lxc-test-unpriv" ] && \
            ignore "$STRING" && continue

        [ "$testbin" = "/usr/bin/lxc-test-usernic" ] && \
            ignore "$STRING" && continue
    fi

    # Skip some tests on old kernels
    if [ ! -f /proc/self/uid_map ] || [ ! -f /etc/subuid ] || \
       [ ! -f /etc/subgid ]; then
        [ "$testbin" = "/usr/bin/lxc-test-unpriv" ] && \
            ignore "$STRING" && continue

        [ "$testbin" = "/usr/bin/lxc-test-usernic" ] && \
            ignore "$STRING" && continue
    fi

    # Skip some tests on archs not supported by lxc-download
    if [ "$(dpkg --print-architecture)" = "ppc64el" ]; then
        [ "$testbin" = "/usr/bin/lxc-test-autostart" ] && \
            ignore "$STRING" && continue

        [ "$testbin" = "/usr/bin/lxc-test-unpriv" ] && \
            ignore "$STRING" && continue

        [ "$testbin" = "/usr/bin/lxc-test-usernic" ] && \
            ignore "$STRING" && continue
    fi

    OUT=$(mktemp)
    $testbin >$OUT 2>&1 && pass "$STRING" || fail "$STRING" "$testbin" "$OUT"
    rm $OUT
done

## Python3 testsuite
STRING="python3: API"
if [ "$(dpkg --print-architecture)" = "ppc64el" ]; then
    ignore "$STRING"
elif [ ! -f /usr/share/doc/python3-lxc/examples/api_test.py.gz ]; then
    ignore "$STRING"
else
    OUT=$(mktemp)

    PYTEST=$(mktemp)
    cat /usr/share/doc/python3-lxc/examples/api_test.py.gz | gzip -d > $PYTEST
    python3 $PYTEST >$OUT 2>&1 && pass "$STRING" || \
        fail "$STRING" "python3" "$OUT"
    rm $PYTEST

    rm $OUT
fi

# Test summary
summary

[ "$TEST_FAIL" != "0" ] && exit 1

exit 0
