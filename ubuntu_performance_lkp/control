AUTHOR = "Ubuntu"
NAME = "ubuntu_performance_lkp"
CRITERIA = """
Performace Regression Tests using lkp"
"""
SUITE = "None"
TIME = "SHORT"
TEST_CLASS = 'kernel'
TEST_CATEGORY = 'Benchmark'
TEST_TYPE = "client"
DOC = ""

name = 'ubuntu_performance_lkp'

#
#  Broken and/or problematic tests
#
unused_lkp_jobs = {
    'pxz.yaml':
        [ 'pxz-100%.yaml' ],
}

lkp_jobs = {
    'aim9.yaml':
        [ 'aim9-brk_test-300s.yaml',
          'aim9-dgram_pipe-300s.yaml',
          'aim9-exec_test-300s.yaml',
          'aim9-fork_test-300s.yaml',
          'aim9-link_test-300s.yaml',
          'aim9-page_test-300s.yaml',
          'aim9-pipe_cpy-300s.yaml',
          'aim9-shared_memory-300s.yaml',
          'aim9-signal_test-300s.yaml',
          'aim9-stream_pipe-300s.yaml',
          'aim9-tcp_test-300s.yaml',
          'aim9-udp_test-300s.yaml' ],
    'cassandra.yaml':
        [ 'cassandra-cs-localhost-300s-3.yaml' ],
    'dbench.yaml':
        [ 'dbench-100%.yaml' ],
    'ebizzy.yaml':
        [ 'ebizzy-10s-100x-200%.yaml' ],
    'hackbench-100.yaml':
        [ 'hackbench-100-socket-process-100%.yaml' ],
    'hackbench-8.yaml':
        [ 'hackbench-8-socket-process-800%.yaml' ],
    'hackbench-perf.yaml':
        [ 'hackbench-perf-socket-process-1600%.yaml' ],
    'iperf.yaml':
        [ 'iperf-cs-localhost-udp-300s.yaml',
          'iperf-cs-localhost-tcp-300s.yaml' ],
    'linpack.yaml':
        [ 'linpack-defaults.yaml' ],
    'perf-bench-futex.yaml':
	[ 'perf-bench-futex-100%-300s-shared-hash.yaml',
	  'perf-bench-futex-100%-300s-hash.yaml',
          'perf-bench-futex-100%-300s-shared-lock-pi.yaml',
          'perf-bench-futex-100%-300s-lock-pi.yaml' ],
    'schbench.yaml':
        [ 'schbench-100%.yaml' ],
    'sockperf.yaml':
        [ 'sockperf-cs-localhost-1472b-600s.yaml' ],
    'sysbench-threads.yaml':
        [ 'sysbench-threads-100%-300s-8-1000.yaml' ],
    'thrulay.yaml':
        [ 'thrulay-cs-localhost-300s.yaml' ],
    'unixbench.yaml':
        [ 'unixbench-100%-300s-context1.yaml',
          'unixbench-100%-300s-dhry2reg.yaml',
          'unixbench-100%-300s-execl.yaml',
          'unixbench-100%-300s-pipe.yaml',
          'unixbench-100%-300s-syscall.yaml',
          'unixbench-100%-300s-whetstone-double.yaml' ],
    'vm-scalability.yaml':
        [ 'vm-scalability-300s-lru-file-mmap-read-rand.yaml',
          'vm-scalability-300s-lru-file-mmap-read.yaml',
          'vm-scalability-300s-mmap-pread-rand-mt.yaml',
          'vm-scalability-300s-mmap-pread-rand.yaml',
          'vm-scalability-300s-mmap-pread-seq-mt.yaml',
          'vm-scalability-300s-mmap-pread-seq.yaml',
          'vm-scalability-300s-mmap-xread-rand-mt.yaml',
          'vm-scalability-300s-mmap-xread-seq-mt.yaml',
          'vm-scalability-300s-mremap-xread-rand-mt.yaml' ],
}

results = job.run_test_detail(name, tag='setup', lkp_job = 'setup', sub_job = 'setup', lkp_jobs = lkp_jobs)
print results

for lkp_job in sorted(lkp_jobs):
    print "JOB '%s'" % lkp_job
    for sub_job in lkp_jobs[lkp_job]:
        results = job.run_test_detail(name, tag=sub_job, lkp_job = lkp_job, sub_job = sub_job, lkp_jobs = lkp_jobs)

# vi:set ts=4 sw=4 expandtab syntax=python:
